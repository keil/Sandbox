*General*

 - rename traget to origin

 - implement decompile cache
   WeakMap: Function -> Global -> Sbxed

*Sandbox*

 - diff/ commit/ conflicts


*Benchmark*

- Ocaten Benchmark
- JS Bench


*Effects*

- Conflict detection


*Test

 - seal, freeze

 - Test function which is called twice and which writes values
   (e.g. a counter)


*Behavior*

 - What to do of (name in target)===false?
   Because of access chains prevent break out or return undefined.
   Test this.

 - Wrap/Decompile functions
   ~ no return wrap
   ~ decompile in proxy required because of an external value


*Demo*

 - Demo with confusing behavior
   ~ for..in (enumerate/iterate)
   ~ freeze
   ~ seal
   ~ isExtensible
   ~ typeof/instanceof in combination with Object.GetPrototypeOf and A.prototype

*Eval*

js> print(Function.prototype.toString.apply(eval));
 function eval() {
     [native code]
 }


*Rollback*

 - Implement the possibility to be transparent with respect to the normal execution and to rollback effects.


*valueOf*

 - Use valueOf to wrap primitive values.
